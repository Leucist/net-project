// <auto-generated />
using Educational_platform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Educational_platform.Migrations
{
    [DbContext(typeof(UsersContext))]
    [Migration("20240605141845_PortToSQLite")]
    partial class PortToSQLite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Educational_platform.Models.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Educational_platform.Models.Enrollments", b =>
                {
                    b.Property<int>("IdCourses")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("IdUsers")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.HasKey("IdCourses", "IdUsers");

                    b.HasIndex("IdUsers");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("Educational_platform.Models.Pages", b =>
                {
                    b.Property<int>("IdPage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCourse")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.HasKey("IdPage");

                    b.HasIndex("IdCourse");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("Educational_platform.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Educational_platform.Models.Enrollments", b =>
                {
                    b.HasOne("Educational_platform.Models.Courses", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("IdCourses")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Educational_platform.Models.Users", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("IdUsers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Educational_platform.Models.Pages", b =>
                {
                    b.HasOne("Educational_platform.Models.Courses", "Course")
                        .WithMany("Pages")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Educational_platform.Models.Courses", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Pages");
                });

            modelBuilder.Entity("Educational_platform.Models.Users", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
